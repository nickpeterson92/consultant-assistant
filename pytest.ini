[pytest]
# Pytest configuration for multi-agent orchestrator system

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers for test organization
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that test complete workflows
    slow: Tests that take more than 5 seconds to run
    a2a: Tests for Agent-to-Agent protocol
    langgraph: Tests for LangGraph components
    circuit_breaker: Tests for resilience patterns
    requires_llm: Tests that require LLM API access
    mock_llm: Tests that use mocked LLM responses

# Output and reporting
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=5
    --disable-warnings
    -p no:warnings
    --color=yes

# Coverage configuration
# Use .coveragerc for detailed coverage settings

# Timeout configuration (in seconds)
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
capture = no

# Parallel execution (disabled by default, enable with -n flag)
# addopts = -n auto  # Uncomment to enable parallel execution by default